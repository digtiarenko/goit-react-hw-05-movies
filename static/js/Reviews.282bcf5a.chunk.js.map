{"version":3,"file":"static/js/Reviews.282bcf5a.chunk.js","mappings":"qSAAaA,EAAa,mCAAG,4FACZ,mCADY,SAGJC,MAAM,2DAAD,OAFb,qCADY,cAGrBC,EAHqB,gBAORA,EAASC,OAPD,YAOrBC,EAPqB,QAQlBC,GARkB,0CASlBC,QAAQC,OAAO,IAAIC,MAAJ,gCATG,iCAWlBJ,EAAKK,SAXa,4CAAH,qDAebC,EAAa,mCAAG,WAAMC,GAAN,+EACZ,mCADY,SAGJV,MAAM,qDAAD,OAFb,mCAEa,iCAC0DU,EAD1D,+BAHD,cAGrBT,EAHqB,gBAORA,EAASC,OAPD,YAOrBC,EAPqB,QAQlBC,GARkB,0CASlBC,QAAQC,OAAO,IAAIC,MAAJ,gCATG,iCAWlBJ,EAAKK,SAXa,4CAAH,sDAebG,EAAiB,mCAAG,WAAMC,GAAN,+EAChB,mCADgB,SAGRZ,MAAM,wCAAD,OACOY,EADP,oBAFb,mCAEa,oBAHG,cAGzBX,EAHyB,gBAMZA,EAASC,OANG,YAMzBC,EANyB,QAQtBC,GARsB,0CAStBC,QAAQC,OAAO,IAAIC,MAAJ,gCATO,iCAWtBJ,GAXsB,4CAAH,sDAejBU,EAAY,mCAAG,WAAMD,GAAN,+EACX,mCADW,SAGHZ,MAAM,wCAAD,OACOY,EADP,4BAFb,mCAEa,oBAHF,cAGpBX,EAHoB,gBAMPA,EAASC,OANF,YAMpBC,EANoB,QAQjBC,GARiB,0CASjBC,QAAQC,OAAO,IAAIC,MAAJ,gCATE,iCAWjBJ,EAAKW,MAXY,4CAAH,sDAeZC,EAAY,mCAAG,WAAMH,GAAN,+EACX,mCADW,SAGHZ,MAAM,wCAAD,OACOY,EADP,4BAFb,mCAEa,2BAHF,cAGpBX,EAHoB,gBAMPA,EAASC,OANF,YAMpBC,EANoB,QAQjBC,GARiB,0CASjBC,QAAQC,OAAO,IAAIC,MAAJ,gCATE,iCAWjBJ,EAAKK,SAXY,4CAAH,uD,kHC/BzB,MAzBA,WACE,IAAQI,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAKA,OAJAC,EAAAA,EAAAA,YAAU,YACRL,EAAAA,EAAAA,IAAaH,GAASS,KAAKF,KAC1B,CAACP,KAGF,yBACGM,EAAQI,OAAS,GAChB,wBACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,eAAeC,aACnC,uBAAIF,EAAOG,YAFJH,EAAOI,UAOpB","sources":["Services/fetchMethods.js","pages/Reviews/Reviews.jsx"],"sourcesContent":["export const fetchTrending = async () => {\n  const apiKey = '22957cc42cbc2dcfc04c7fad2963e2db';\n\n  const response = await fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`,\n  );\n\n  const data = await response.json();\n  if (data.ok) {\n    return Promise.reject(new Error(`Ooops something went wrong`));\n  } else {\n    return data.results;\n  }\n};\n\nexport const fetchBySearch = async query => {\n  const apiKey = '22957cc42cbc2dcfc04c7fad2963e2db';\n\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=true`,\n  );\n\n  const data = await response.json();\n  if (data.ok) {\n    return Promise.reject(new Error(`Ooops something went wrong`));\n  } else {\n    return data.results;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const apiKey = '22957cc42cbc2dcfc04c7fad2963e2db';\n\n  const response = await fetch(`\nhttps://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}&language=en-US`);\n\n  const data = await response.json();\n\n  if (data.ok) {\n    return Promise.reject(new Error(`Ooops something went wrong`));\n  } else {\n    return data;\n  }\n};\n\nexport const fetchCredits = async movieId => {\n  const apiKey = '22957cc42cbc2dcfc04c7fad2963e2db';\n\n  const response = await fetch(`\nhttps://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}&language=en-US`);\n\n  const data = await response.json();\n\n  if (data.ok) {\n    return Promise.reject(new Error(`Ooops something went wrong`));\n  } else {\n    return data.cast;\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  const apiKey = '22957cc42cbc2dcfc04c7fad2963e2db';\n\n  const response = await fetch(`\nhttps://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`);\n\n  const data = await response.json();\n\n  if (data.ok) {\n    return Promise.reject(new Error(`Ooops something went wrong`));\n  } else {\n    return data.results;\n  }\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../Services/fetchMethods';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    fetchReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h4>AUTHOR: {review.author_details.username}</h4>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h3>No reviews</h3>\n      )}\n    </div>\n  );\n}\n\nexport default Reviews;\n"],"names":["fetchTrending","fetch","response","json","data","ok","Promise","reject","Error","results","fetchBySearch","query","fetchMovieDetails","movieId","fetchCredits","cast","fetchReviews","useParams","useState","reviews","setReviews","useEffect","then","length","map","review","author_details","username","content","id"],"sourceRoot":""}