{"version":3,"file":"static/js/MoviesPage.1b210fb5.chunk.js","mappings":"qSAAaA,EAAa,mCAAG,4FACZ,mCADY,SAGJC,MAAM,2DAAD,OAFb,qCADY,cAGrBC,EAHqB,gBAORA,EAASC,OAPD,YAOrBC,EAPqB,QAQlBC,GARkB,0CASlBC,QAAQC,OAAO,IAAIC,MAAJ,gCATG,iCAWlBJ,EAAKK,SAXa,4CAAH,qDAebC,EAAa,mCAAG,WAAMC,GAAN,+EACZ,mCADY,SAGJV,MAAM,qDAAD,OAFb,mCAEa,iCAC0DU,EAD1D,+BAHD,cAGrBT,EAHqB,gBAORA,EAASC,OAPD,YAOrBC,EAPqB,QAQlBC,GARkB,0CASlBC,QAAQC,OAAO,IAAIC,MAAJ,gCATG,iCAWlBJ,EAAKK,SAXa,4CAAH,sDAebG,EAAiB,mCAAG,WAAMC,GAAN,+EAChB,mCADgB,SAGRZ,MAAM,wCAAD,OACOY,EADP,oBAFb,mCAEa,oBAHG,cAGzBX,EAHyB,gBAMZA,EAASC,OANG,YAMzBC,EANyB,QAQtBC,GARsB,0CAStBC,QAAQC,OAAO,IAAIC,MAAJ,gCATO,iCAWtBJ,GAXsB,4CAAH,sDAejBU,EAAY,mCAAG,WAAMD,GAAN,+EACX,mCADW,SAGHZ,MAAM,wCAAD,OACOY,EADP,4BAFb,mCAEa,oBAHF,cAGpBX,EAHoB,gBAMPA,EAASC,OANF,YAMpBC,EANoB,QAQjBC,GARiB,0CASjBC,QAAQC,OAAO,IAAIC,MAAJ,gCATE,iCAWjBJ,EAAKW,MAXY,4CAAH,sDAeZC,EAAY,mCAAG,WAAMH,GAAN,+EACX,mCADW,SAGHZ,MAAM,wCAAD,OACOY,EADP,4BAFb,mCAEa,2BAHF,cAGpBX,EAHoB,gBAMPA,EAASC,OANF,YAMpBC,EANoB,QAQjBC,GARiB,0CASjBC,QAAQC,OAAO,IAAIC,MAAJ,gCATE,iCAWjBJ,EAAKK,SAXY,4CAAH,uD,kHC3DzB,EAA6B,+BAA7B,EAA8E,oCAA9E,EAAqI,qC,SC8DrI,MAzDA,WAAuB,IAAD,EACdQ,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAqBC,GAArB,WACA,GAA0BC,EAAAA,EAAAA,UAAQ,iBAACJ,QAAD,IAACA,OAAD,EAACA,EAAUK,cAAX,QAAqB,IAAvD,eAAOX,EAAP,KAAcY,EAAd,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KAmBA,OAPAC,EAAAA,EAAAA,YAAU,WACM,KAAVjB,IAGJD,EAAAA,EAAAA,GAAcC,GAAOkB,MAAK,SAAAH,GAAM,OAAIC,EAAUD,QAC7C,CAACf,KAGF,iCACE,kBAAMmB,UAAWC,EAAmBC,SAfnB,SAAAC,GACnBA,EAAMC,iBACNX,EAASC,GACTJ,EAAgBI,IAYd,WACE,kBACEM,UAAWC,EACXI,MAAOX,EACPY,SAvBa,SAAAH,GACnBR,EAAeQ,EAAMI,OAAOF,QAuBtBG,KAAK,QACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,sBAEd,mBAAQZ,UAAWC,EAAyBQ,KAAK,SAAjD,uBAKDb,IACC,wBACGA,EAAOiB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAM/B,GAAxC,SACG2B,EAAMK,SAFFL,EAAME","sources":["Services/fetchMethods.js","webpack://react-homework-template/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["export const fetchTrending = async () => {\n  const apiKey = '22957cc42cbc2dcfc04c7fad2963e2db';\n\n  const response = await fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`,\n  );\n\n  const data = await response.json();\n  if (data.ok) {\n    return Promise.reject(new Error(`Ooops something went wrong`));\n  } else {\n    return data.results;\n  }\n};\n\nexport const fetchBySearch = async query => {\n  const apiKey = '22957cc42cbc2dcfc04c7fad2963e2db';\n\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=true`,\n  );\n\n  const data = await response.json();\n  if (data.ok) {\n    return Promise.reject(new Error(`Ooops something went wrong`));\n  } else {\n    return data.results;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const apiKey = '22957cc42cbc2dcfc04c7fad2963e2db';\n\n  const response = await fetch(`\nhttps://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}&language=en-US`);\n\n  const data = await response.json();\n\n  if (data.ok) {\n    return Promise.reject(new Error(`Ooops something went wrong`));\n  } else {\n    return data;\n  }\n};\n\nexport const fetchCredits = async movieId => {\n  const apiKey = '22957cc42cbc2dcfc04c7fad2963e2db';\n\n  const response = await fetch(`\nhttps://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}&language=en-US`);\n\n  const data = await response.json();\n\n  if (data.ok) {\n    return Promise.reject(new Error(`Ooops something went wrong`));\n  } else {\n    return data.cast;\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  const apiKey = '22957cc42cbc2dcfc04c7fad2963e2db';\n\n  const response = await fetch(`\nhttps://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`);\n\n  const data = await response.json();\n\n  if (data.ok) {\n    return Promise.reject(new Error(`Ooops something went wrong`));\n  } else {\n    return data.results;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"MoviesPage_searchForm__oPV05\",\"searchFormInput\":\"MoviesPage_searchFormInput__gZYVK\",\"searchFormButton\":\"MoviesPage_searchFormButton__CiqdZ\"};","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchBySearch } from '../../Services/fetchMethods';\n\nimport styles from './MoviesPage.module.css';\n\nfunction MoviesPage() {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams(); // eslint-disable-line\n  const [query, setQuery] = useState(location?.search ?? '');\n  const [searchValue, setSearchValue] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const handleChange = event => {\n    setSearchValue(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setQuery(searchValue);\n    setSearchParams(searchValue);\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    fetchBySearch(query).then(movies => setMovies(movies));\n  }, [query]);\n\n  return (\n    <>\n      <form className={styles.searchForm} onSubmit={handleSubmit}>\n        <input\n          className={styles.searchFormInput}\n          value={searchValue}\n          onChange={handleChange}\n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"enter your movie\"\n        />\n        <button className={styles.searchFormButton} type=\"submit\">\n          Search\n        </button>\n      </form>\n\n      {movies && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default MoviesPage;\n"],"names":["fetchTrending","fetch","response","json","data","ok","Promise","reject","Error","results","fetchBySearch","query","fetchMovieDetails","movieId","fetchCredits","cast","fetchReviews","location","useLocation","useSearchParams","setSearchParams","useState","search","setQuery","searchValue","setSearchValue","movies","setMovies","useEffect","then","className","styles","onSubmit","event","preventDefault","value","onChange","target","name","type","autoComplete","autoFocus","placeholder","map","movie","to","id","state","from","title"],"sourceRoot":""}