{"version":3,"file":"static/js/Cast.2fff9d4a.chunk.js","mappings":"qSAAaA,EAAa,mCAAG,4FACZ,mCADY,SAGJC,MAAM,2DAAD,OAFb,qCADY,cAGrBC,EAHqB,gBAORA,EAASC,OAPD,YAOrBC,EAPqB,QAQlBC,GARkB,0CASlBC,QAAQC,OAAO,IAAIC,MAAJ,gCATG,iCAWlBJ,EAAKK,SAXa,4CAAH,qDAebC,EAAa,mCAAG,WAAMC,GAAN,+EACZ,mCADY,SAGJV,MAAM,qDAAD,OAFb,mCAEa,iCAC0DU,EAD1D,+BAHD,cAGrBT,EAHqB,gBAORA,EAASC,OAPD,YAOrBC,EAPqB,QAQlBC,GARkB,0CASlBC,QAAQC,OAAO,IAAIC,MAAJ,gCATG,iCAWlBJ,EAAKK,SAXa,4CAAH,sDAebG,EAAiB,mCAAG,WAAMC,GAAN,+EAChB,mCADgB,SAGRZ,MAAM,wCAAD,OACOY,EADP,oBAFb,mCAEa,oBAHG,cAGzBX,EAHyB,gBAMZA,EAASC,OANG,YAMzBC,EANyB,QAQtBC,GARsB,0CAStBC,QAAQC,OAAO,IAAIC,MAAJ,gCATO,iCAWtBJ,GAXsB,4CAAH,sDAejBU,EAAY,mCAAG,WAAMD,GAAN,+EACX,mCADW,SAGHZ,MAAM,wCAAD,OACOY,EADP,4BAFb,mCAEa,oBAHF,cAGpBX,EAHoB,gBAMPA,EAASC,OANF,YAMpBC,EANoB,QAQjBC,GARiB,0CASjBC,QAAQC,OAAO,IAAIC,MAAJ,gCATE,iCAWjBJ,EAAKW,MAXY,4CAAH,sDAeZC,EAAY,mCAAG,WAAMH,GAAN,+EACX,mCADW,SAGHZ,MAAM,wCAAD,OACOY,EADP,4BAFb,mCAEa,2BAHF,cAGpBX,EAHoB,gBAMPA,EAASC,OANF,YAMpBC,EANoB,QAQjBC,GARiB,0CASjBC,QAAQC,OAAO,IAAIC,MAAJ,gCATE,iCAWjBJ,EAAKK,SAXY,4CAAH,uD,kHC3DzB,EAA2B,uB,SCuC3B,MAlCA,WACE,IACQI,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAAyBK,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAcC,EAAd,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAaD,GAASS,MAAK,SAAAH,GAAK,OAAIC,EAAQD,QAC3C,CAACN,KAGF,yBACGM,IACC,eAAII,UAAWC,EAAf,SACGL,EAAMM,KAAI,SAAAV,GAAI,OACb,gBAAkBQ,UAAW,KAA7B,WACE,gBACEG,IACEX,EAAKY,aAAL,UAhBC,oCAgBD,OACkBZ,EAAKY,cACnBC,EAENC,IAAKd,EAAKe,MACVC,MAAM,MACNC,OAAO,SAET,cAAGT,UAAW,KAAd,SAAqBR,EAAKkB,SAXnBlB,EAAKmB,a","sources":["Services/fetchMethods.js","webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx"],"sourcesContent":["export const fetchTrending = async () => {\n  const apiKey = '22957cc42cbc2dcfc04c7fad2963e2db';\n\n  const response = await fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`,\n  );\n\n  const data = await response.json();\n  if (data.ok) {\n    return Promise.reject(new Error(`Ooops something went wrong`));\n  } else {\n    return data.results;\n  }\n};\n\nexport const fetchBySearch = async query => {\n  const apiKey = '22957cc42cbc2dcfc04c7fad2963e2db';\n\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=true`,\n  );\n\n  const data = await response.json();\n  if (data.ok) {\n    return Promise.reject(new Error(`Ooops something went wrong`));\n  } else {\n    return data.results;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const apiKey = '22957cc42cbc2dcfc04c7fad2963e2db';\n\n  const response = await fetch(`\nhttps://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}&language=en-US`);\n\n  const data = await response.json();\n\n  if (data.ok) {\n    return Promise.reject(new Error(`Ooops something went wrong`));\n  } else {\n    return data;\n  }\n};\n\nexport const fetchCredits = async movieId => {\n  const apiKey = '22957cc42cbc2dcfc04c7fad2963e2db';\n\n  const response = await fetch(`\nhttps://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}&language=en-US`);\n\n  const data = await response.json();\n\n  if (data.ok) {\n    return Promise.reject(new Error(`Ooops something went wrong`));\n  } else {\n    return data.cast;\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  const apiKey = '22957cc42cbc2dcfc04c7fad2963e2db';\n\n  const response = await fetch(`\nhttps://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`);\n\n  const data = await response.json();\n\n  if (data.ok) {\n    return Promise.reject(new Error(`Ooops something went wrong`));\n  } else {\n    return data.results;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__qSSqO\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCredits } from '../../Services/fetchMethods';\nimport defaultPic from './default.jpg';\nimport styles from './Cast.module.css';\n\nfunction Cast() {\n  const BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n  const { movieId } = useParams();\n  const [casts, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchCredits(movieId).then(casts => setCast(casts));\n  }, [movieId]);\n\n  return (\n    <div>\n      {casts && (\n        <ul className={styles.castList}>\n          {casts.map(cast => (\n            <li key={cast.id} className={null}>\n              <img\n                src={\n                  cast.profile_path\n                    ? `${BASE_URL}${cast.profile_path}`\n                    : defaultPic\n                }\n                alt={cast.title}\n                width=\"100\"\n                height=\"150\"\n              />\n              <p className={null}>{cast.name}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {/* <Outlet /> */}\n    </div>\n  );\n}\nexport default Cast;\n"],"names":["fetchTrending","fetch","response","json","data","ok","Promise","reject","Error","results","fetchBySearch","query","fetchMovieDetails","movieId","fetchCredits","cast","fetchReviews","useParams","useState","casts","setCast","useEffect","then","className","styles","map","src","profile_path","defaultPic","alt","title","width","height","name","id"],"sourceRoot":""}